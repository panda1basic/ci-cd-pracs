version: '3.8'

services:
  web:
    image: ${PROD_IMAGE}
    container_name: flask-app
    ports:
      - '80:5000'
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:14.17
    container_name: postgres-flask
    ports:
      - '5433:5432'
    volumes:
      - ./${POSTGRES_PATH}:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./${PROMETHEUS_PATH}:/etc/prometheus/prometheus.yml:ro
    restart: always

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./${ALERT_PATH}:/etc/alertmanager/alertmanager.yml:ro
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
      - loki
    restart: always

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - '3100:3100'
    volumes:
      - ./${LOKI_PATH}:/etc/loki/local-config.yaml:ro
    command:
      - -config.file=/etc/loki/local-config.yaml
    restart: always

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - '9080:9080'
    volumes:
      - ./${PROMTAIL_PATH}:/etc/promtail/promtail.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - -config.file=/etc/promtail/promtail.yaml
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=30        # сек
      - WATCHTOWER_CLEANUP=true            # удалять старые теги
    restart: always