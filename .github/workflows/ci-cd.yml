name: CI & CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Python Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: webfactory/ssh-agent@v0.8.0

      - name: Expose repo root to PYTHONPATH
        run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install all requirements
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          find src -type f -name requirements.txt \
            | xargs -n1 pip install -r

      - name: Run pytest
        run: |
          . venv/bin/activate
          pytest auto_tests

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: src/pr3
          file: src/pr3/Dockerfile
          push: true
          tags: |
            panda1basic/flask-app:latest
            panda1basic/flask-app:${{ github.sha }}

  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug SSH key presence
        run: |
          if [ -z "$SSH_PRIVATE_KEY" ]; then
            echo "SSH_PRIVATE_KEY is EMPTY!"
            exit 1
          else
            echo "SSH_PRIVATE_KEY is set (length: $(echo -n "$SSH_PRIVATE_KEY" | wc -c) characters)"
          fi
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup SSH agent
        uses: actions/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy compose and env to VM
        run: |
          scp src/pr3/docker-compose.dev.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/ci-cd-pracs/src/pr3/docker-compose.dev.yml
          scp src/pr3/.env                ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/ci-cd-pracs/src/pr3/.env

      - name: Pull and restart containers on VM
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/ci-cd-pracs/src/pr3
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml up -d
          EOF
